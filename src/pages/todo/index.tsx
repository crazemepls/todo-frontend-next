import Head from 'next/head'
import { Inter } from 'next/font/google'
import axios from 'axios'
import styles from '@/styles/Home.module.css'
import TodoCard from '@/components/TodoCard'
import generateRandomAnimal from 'random-animal-name'
import { useRouter } from 'next/router'
import { addDays } from 'date-fns'
import React, { useState } from 'react'
import Modalv2 from '@/components/Modalv2'


const inter = Inter({ subsets: ['latin'] })

//fetch with "getServerSideProps"
export async function getServerSideProps() {
  //http request
  const req = await axios.get(`https://3t5qygoujf.execute-api.ap-southeast-2.amazonaws.com/production/`)
  const res = await req.data

  return {
    props: {
      todos: res.filter((ress: any) => ress.published === false) // <-- assign response
    },
  }
}

function Todo(props: any) {
  const router = useRouter()
  const [openModal, setOpenModal] = useState(false)

  //destruct
  const { todos } = props;

  const refreshData = () => {
    router.replace(router.asPath);
  }

  const handleCloseModal = () => {
    setOpenModal(false)
  }

  const handleOpenModal = () => {
    setOpenModal(true)
  }

  async function handleNewRandomTodo() {
    await axios.post(
      `https://3t5qygoujf.execute-api.ap-southeast-2.amazonaws.com/production/`,
      {
        title: generateRandomAnimal(),
        description: 'desc ' + generateRandomAnimal(),
        published: Math.random() < 0.5
      }, {
      headers: {
        "Content-Type": 'application/json'
      }
    }
    ).then(
      refreshData
    )
  }

  async function handleNewTodo(payload: any) {
    await axios.post(
      `https://3t5qygoujf.execute-api.ap-southeast-2.amazonaws.com/production/`,
      payload,
      {
        headers: {
          "Content-Type": 'application/json'
        }
      }
    ).then(
      refreshData
    )
  }

  async function handleDeleteTodo(id: string) {
    console.log('delete ' + id)
    await axios.delete(
      `https://3t5qygoujf.execute-api.ap-southeast-2.amazonaws.com/production/` + id,
      {
        headers: {
          "Content-Type": 'application/json'
        }
      }
    ).then(
      refreshData
    )
  }

  async function handleUpdateTodoStatus(todo: any) {
    console.log('update ' + todo.id)
    await axios.put(
      `https://3t5qygoujf.execute-api.ap-southeast-2.amazonaws.com/production/` + todo.id,
      {
        published: !todo.published,
      }, {
      headers: {
        "Content-Type": 'application/json',
      }
    }
    ).then(
      refreshData
    )
  }

  async function handleUpdateTodo(todo: any) {
    console.log('update ' + todo.id)
    await axios.put(
      `https://3t5qygoujf.execute-api.ap-southeast-2.amazonaws.com/production/` + todo.id,
      {
        title: 'New ' + generateRandomAnimal(),
        description: 'New ' + generateRandomAnimal(),
        published: !todo.published,
        deadline: addDays(new Date(), 20),
      }, {
      headers: {
        "Content-Type": 'application/json',
      }
    }
    ).then(
      refreshData
    )
  }

  return (
    <>
      <Head>
        <title>Unfinished Tasks</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div style={{ display: 'flex', flexDirection: 'row' }}>
          <button className='mx-5 px-2 bg-gray-500' onClick={() => handleNewRandomTodo()}>New Random Todo</button>
          <button className='mx-5 px-2 bg-gray-500' onClick={() => handleOpenModal()}>New Todo</button>
        </div>

        <div style={{ paddingTop: '20px' }}>
          {
            todos.map((todo: any) => (
              <TodoCard
                editable={false}
                todo={todo}
                key={todo.id}
                handleDeleteTodo={handleDeleteTodo}
                handleUpdateTodoStatus={handleUpdateTodoStatus}
                handleUpdateTodo={handleUpdateTodo}
              />
            ))
          }
        </div>
        {openModal && <Modalv2 handleCloseModal={handleCloseModal} handleNewTodo={handleNewTodo} />}
      </main>
    </>
  )
}

export default Todo